@model AcademiaApp.Models.Treino
@{
    ViewData["Title"] = "Detalhes do Treino";
}

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mt-4 mb-4">
        <div>
            <a asp-action="Index" class="btn btn-outline-secondary mb-2">
                <i class="bi bi-arrow-left me-2"></i>Voltar
            </a>
            <h2 class="mb-0">
                <i class="bi bi-clipboard-check me-2"></i>@Model.Nome
            </h2>
        </div>
        <div>
            @if (Model.Ativo)
            {
                <span class="badge bg-success fs-6">Ativo</span>
            }
            else
            {
                <span class="badge bg-secondary fs-6">Inativo</span>
            }
        </div>
    </div>

    <partial name="_Mensagens" />

    <div class="row g-4">
        <!-- Informações do Treino -->
        <div class="col-lg-4">
            <div class="card shadow-sm rounded-4 border-0 mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">
                        <i class="bi bi-info-circle me-2"></i>Informações
                    </h5>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(Model.Descricao))
                    {
                        <div class="mb-3">
                            <label class="form-label text-muted small">Descrição/Objetivo</label>
                            <p>@Model.Descricao</p>
                        </div>
                    }

                    <div class="mb-3">
                        <label class="form-label text-muted small">Nível de Dificuldade</label>
                        <p>
                            @{
                                var nivelClass = Model.Nivel switch
                                {
                                    PROJETOMVC.Models.Enums.NivelDificuldade.Iniciante => "bg-success",
                                    PROJETOMVC.Models.Enums.NivelDificuldade.Intermediario => "bg-warning text-dark",
                                    PROJETOMVC.Models.Enums.NivelDificuldade.Avancado => "bg-danger",
                                    _ => "bg-secondary"
                                };
                            }
                            <span class="badge @nivelClass">@Model.Nivel</span>
                        </p>
                    </div>

                    <div class="mb-3">
                        <label class="form-label text-muted small">Tipo de Treino</label>
                        <p><span class="badge bg-primary">@Model.Tipo</span></p>
                    </div>

                    <div class="mb-3">
                        <label class="form-label text-muted small">Aluno</label>
                        <p>
                            @if (Model.Usuario != null)
                            {
                                <span class="badge bg-info">@Model.Usuario.Nome</span>
                            }
                            else
                            {
                                <span class="text-muted">Não atribuído</span>
                            }
                        </p>
                    </div>

                    @if (Model.CriadoPor != null)
                    {
                        <div class="mb-3">
                            <label class="form-label text-muted small">Criado por</label>
                            <p>@Model.CriadoPor.Nome</p>
                        </div>
                    }

                    @if (Model.DataInicio.HasValue || Model.DataFim.HasValue)
                    {
                        <div class="mb-3">
                            <label class="form-label text-muted small">Período</label>
                            <p>
                                @if (Model.DataInicio.HasValue)
                                {
                                    <span>@Model.DataInicio.Value.ToString("dd/MM/yyyy")</span>
                                }
                                @if (Model.DataInicio.HasValue && Model.DataFim.HasValue)
                                {
                                    <span> até </span>
                                }
                                @if (Model.DataFim.HasValue)
                                {
                                    <span>@Model.DataFim.Value.ToString("dd/MM/yyyy")</span>
                                }
                            </p>
                        </div>
                    }

                    <div class="mb-0">
                        <label class="form-label text-muted small">Data de Criação</label>
                        <p>@Model.DataCriacao.ToString("dd/MM/yyyy HH:mm")</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Exercícios do Treino -->
        <div class="col-lg-8">
            <div class="card shadow-sm rounded-4 border-0">
                <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="bi bi-list-check me-2"></i>Exercícios
                    </h5>
                    <button class="btn btn-light btn-sm">
                        <i class="bi bi-plus-circle me-1"></i>Adicionar Exercício
                    </button>
                </div>
                <div class="card-body">
                    @if (Model.TreinoExercicios != null && Model.TreinoExercicios.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Ordem</th>
                                        <th>Exercício</th>
                                        <th>Séries</th>
                                        <th>Repetições</th>
                                        <th>Carga</th>
                                        <th>Descanso</th>
                                        <th class="text-center">Ações</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var te in Model.TreinoExercicios.OrderBy(x => x.Ordem))
                                    {
                                        <tr>
                                            <td><span class="badge bg-secondary">@te.Ordem</span></td>
                                            <td class="fw-semibold">@te.Exercicio?.Nome</td>
                                            <td>@te.Series</td>
                                            <td>@te.Repeticoes</td>
                                            <td>@(te.Carga.HasValue ? $"{te.Carga}kg" : "-")</td>
                                            <td>@(te.TempoDescanso.HasValue ? $"{te.TempoDescanso}s" : "-")</td>
                                            <td class="text-center">
                                                <button class="btn btn-sm btn-warning" title="Editar">
                                                    <i class="bi bi-pencil"></i>
                                                </button>
                                                <button class="btn btn-sm btn-danger" title="Remover">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="bi bi-inbox display-4 text-muted"></i>
                            <p class="mt-3 text-muted">Nenhum exercício adicionado ainda.</p>
                            <button class="btn btn-success">
                                <i class="bi bi-plus-circle me-2"></i>Adicionar Primeiro Exercício
                            </button>
                        </div>
                    }
                </div>
            </div>

            <!-- Histórico de Execuções -->
            <div class="card shadow-sm rounded-4 border-0 mt-4">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0">
                        <i class="bi bi-clock-history me-2"></i>Histórico de Execuções
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.Execucoes != null && Model.Execucoes.Any())
                    {
                        <div class="list-group">
                            @foreach (var execucao in Model.Execucoes.OrderByDescending(e => e.DataExecucao))
                            {
                                <div class="list-group-item">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <h6 class="mb-1">@execucao.DataExecucao.ToString("dd/MM/yyyy HH:mm")</h6>
                                            <small class="text-muted">@execucao.Usuario?.Nome</small>
                                        </div>
                                        <div>
                                            @if (execucao.Concluido)
                                            {
                                                <span class="badge bg-success">Concluído</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning text-dark">Parcial</span>
                                            }
                                        </div>
                                    </div>
                                    @if (!string.IsNullOrEmpty(execucao.ObservacoesAluno))
                                    {
                                        <p class="mb-0 mt-2 small">
                                            <i class="bi bi-chat-left-text me-1"></i>@execucao.ObservacoesAluno
                                        </p>
                                    }
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="bi bi-inbox display-4 text-muted"></i>
                            <p class="mt-3 text-muted mb-0">Nenhuma execução registrada.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>