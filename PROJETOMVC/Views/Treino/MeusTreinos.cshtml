@model IEnumerable<AcademiaApp.Models.Treino>
@{
    ViewData["Title"] = "Meus Treinos";
}

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mt-4 mb-4">
        <h2 class="mb-0">
            <i class="bi bi-person-check me-2"></i>Meus Treinos
        </h2>
    </div>

    <partial name="_Mensagens" />

    @if (Model != null && Model.Any())
    {
        <div class="row g-4">
            @foreach (var treino in Model)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="card h-100 shadow-sm rounded-4 border-0">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start mb-3">
                                <h5 class="card-title mb-0">@treino.Nome</h5>
                                @if (treino.Ativo)
                                {
                                    <span class="badge bg-success">Ativo</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Inativo</span>
                                }
                            </div>

                            @if (!string.IsNullOrEmpty(treino.Descricao))
                            {
                                <p class="card-text text-muted small">@treino.Descricao</p>
                            }

                            <div class="mb-2">
                                @{
                                    var nivelClass = treino.Nivel switch
                                    {
                                        PROJETOMVC.Models.Enums.NivelDificuldade.Iniciante => "bg-success",
                                        PROJETOMVC.Models.Enums.NivelDificuldade.Intermediario => "bg-warning text-dark",
                                        PROJETOMVC.Models.Enums.NivelDificuldade.Avancado => "bg-danger",
                                        _ => "bg-secondary"
                                    };
                                }
                                <span class="badge @nivelClass me-1">@treino.Nivel</span>
                                <span class="badge bg-primary">@treino.Tipo</span>
                            </div>

                            @if (treino.DataInicio.HasValue && treino.DataFim.HasValue)
                            {
                                <p class="card-text small text-muted mb-3">
                                    <i class="bi bi-calendar-range me-1"></i>
                                    @treino.DataInicio.Value.ToString("dd/MM/yyyy") - @treino.DataFim.Value.ToString("dd/MM/yyyy")
                                </p>
                            }

                            @if (treino.CriadoPor != null)
                            {
                                <p class="card-text small text-muted mb-3">
                                    <i class="bi bi-person me-1"></i>
                                    Criado por: <strong>@treino.CriadoPor.Nome</strong>
                                </p>
                            }

                            <a asp-action="Detalhes" asp-route-id="@treino.Id" class="btn btn-primary w-100">
                                <i class="bi bi-eye me-2"></i>Ver Detalhes
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="card shadow-sm rounded-4 border-0">
            <div class="card-body text-center py-5">
                <i class="bi bi-inbox display-1 text-muted"></i>
                <h4 class="mt-3">Você ainda não tem treinos</h4>
                <p class="text-muted">Entre em contato com seu treinador para criar seu treino personalizado.</p>
            </div>
        </div>
    }
</div>