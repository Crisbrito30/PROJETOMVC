// <auto-generated />
using System;
using AcademiaApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace PROJETOMVC.Migrations
{
    [DbContext(typeof(AcademiaContext))]
    partial class AcademiaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AcademiaApp.Models.ExecucaoTreino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Concluido")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataExecucao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ObservacoesAluno")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("TreinoId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TreinoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ExecucoesTreino");
                });

            modelBuilder.Entity("AcademiaApp.Models.Treino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int?>("CriadoPorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Nivel")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CriadoPorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Treinos");
                });

            modelBuilder.Entity("AcademiaApp.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("Cref")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataMatricula")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Endereco")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Especialidade")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ObservacoesMedicas")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Plano")
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Cpf = "000.000.000-00",
                            DataCadastro = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@academia.com",
                            Nome = "Administrador",
                            Senha = "admin123",
                            TipoUsuario = 3
                        });
                });

            modelBuilder.Entity("PROJETOMVC.Models.ExecucaoExercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CargaUtilizada")
                        .HasPrecision(6, 2)
                        .HasColumnType("numeric(6,2)");

                    b.Property<int>("ExecucaoTreinoId")
                        .HasColumnType("integer");

                    b.Property<bool>("Executado")
                        .HasColumnType("boolean");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int?>("RepeticoesRealizadas")
                        .HasColumnType("integer");

                    b.Property<int>("TreinoExercicioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExecucaoTreinoId");

                    b.HasIndex("TreinoExercicioId");

                    b.ToTable("ExecucoesExercicio");
                });

            modelBuilder.Entity("PROJETOMVC.Models.Exercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("GrupoMuscular")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("VideoUrl")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Exercicios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            GrupoMuscular = 1,
                            Nome = "Supino Reto"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            GrupoMuscular = 6,
                            Nome = "Agachamento Livre"
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            GrupoMuscular = 3,
                            Nome = "Desenvolvimento"
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            GrupoMuscular = 2,
                            Nome = "Remada Curvada"
                        },
                        new
                        {
                            Id = 5,
                            Ativo = true,
                            GrupoMuscular = 4,
                            Nome = "Rosca Direta"
                        },
                        new
                        {
                            Id = 6,
                            Ativo = true,
                            GrupoMuscular = 5,
                            Nome = "Tríceps Testa"
                        },
                        new
                        {
                            Id = 7,
                            Ativo = true,
                            GrupoMuscular = 6,
                            Nome = "Leg Press"
                        },
                        new
                        {
                            Id = 8,
                            Ativo = true,
                            GrupoMuscular = 8,
                            Nome = "Abdominal Crunch"
                        });
                });

            modelBuilder.Entity("PROJETOMVC.Models.TreinoExercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Carga")
                        .HasPrecision(6, 2)
                        .HasColumnType("numeric(6,2)");

                    b.Property<int?>("DiaSemana")
                        .HasColumnType("integer");

                    b.Property<string>("Divisao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("ExercicioId")
                        .HasColumnType("integer");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("Ordem")
                        .HasColumnType("integer");

                    b.Property<string>("Repeticoes")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("Series")
                        .HasColumnType("integer");

                    b.Property<int?>("TempoDescanso")
                        .HasColumnType("integer");

                    b.Property<int>("TreinoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExercicioId");

                    b.HasIndex("TreinoId");

                    b.ToTable("TreinoExercicios");
                });

            modelBuilder.Entity("AcademiaApp.Models.ExecucaoTreino", b =>
                {
                    b.HasOne("AcademiaApp.Models.Treino", "Treino")
                        .WithMany("Execucoes")
                        .HasForeignKey("TreinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AcademiaApp.Models.Usuario", "Usuario")
                        .WithMany("ExecucoesTreino")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Treino");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AcademiaApp.Models.Treino", b =>
                {
                    b.HasOne("AcademiaApp.Models.Usuario", "CriadoPor")
                        .WithMany("TreinosCriados")
                        .HasForeignKey("CriadoPorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AcademiaApp.Models.Usuario", "Usuario")
                        .WithMany("Treinos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CriadoPor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PROJETOMVC.Models.ExecucaoExercicio", b =>
                {
                    b.HasOne("AcademiaApp.Models.ExecucaoTreino", "ExecucaoTreino")
                        .WithMany("ExecucaoExercicios")
                        .HasForeignKey("ExecucaoTreinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PROJETOMVC.Models.TreinoExercicio", "TreinoExercicio")
                        .WithMany()
                        .HasForeignKey("TreinoExercicioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ExecucaoTreino");

                    b.Navigation("TreinoExercicio");
                });

            modelBuilder.Entity("PROJETOMVC.Models.TreinoExercicio", b =>
                {
                    b.HasOne("PROJETOMVC.Models.Exercicio", "Exercicio")
                        .WithMany("TreinoExercicios")
                        .HasForeignKey("ExercicioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AcademiaApp.Models.Treino", "Treino")
                        .WithMany("TreinoExercicios")
                        .HasForeignKey("TreinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercicio");

                    b.Navigation("Treino");
                });

            modelBuilder.Entity("AcademiaApp.Models.ExecucaoTreino", b =>
                {
                    b.Navigation("ExecucaoExercicios");
                });

            modelBuilder.Entity("AcademiaApp.Models.Treino", b =>
                {
                    b.Navigation("Execucoes");

                    b.Navigation("TreinoExercicios");
                });

            modelBuilder.Entity("AcademiaApp.Models.Usuario", b =>
                {
                    b.Navigation("ExecucoesTreino");

                    b.Navigation("Treinos");

                    b.Navigation("TreinosCriados");
                });

            modelBuilder.Entity("PROJETOMVC.Models.Exercicio", b =>
                {
                    b.Navigation("TreinoExercicios");
                });
#pragma warning restore 612, 618
        }
    }
}
